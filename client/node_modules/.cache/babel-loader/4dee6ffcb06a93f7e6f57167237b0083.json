{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ny\\\\Desktop\\\\guguwagwag\\\\client\\\\src\\\\components\\\\draw\\\\Canvas.js\";\nimport React, { Component } from \"react\";\nimport { v4 } from \"uuid\";\nimport Pusher from \"pusher-js\";\nimport '../../css/canvas.css';\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.isPainting = false;\n    this.userStrokeStyle = \"#EE92C2\";\n    this.guestStrokeStyle = \"#F0C987\";\n    this.line = [];\n    this.userId = v4();\n    this.prevPos = {\n      offsetX: 0,\n      offsetY: 0\n    };\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.endPaintEvent = this.endPaintEvent.bind(this);\n    this.pusher = new Pusher(\"PUSHER_KEY\", {\n      cluster: \"eu\"\n    });\n  }\n\n  onMouseDown({\n    nativeEvent\n  }) {\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    this.isPainting = true;\n    this.prevPos = {\n      offsetX,\n      offsetY\n    };\n  }\n\n  onMouseMove({\n    nativeEvent\n  }) {\n    if (this.isPainting) {\n      const {\n        offsetX,\n        offsetY\n      } = nativeEvent;\n      const offSetData = {\n        offsetX,\n        offsetY\n      };\n      this.position = {\n        start: { ...this.prevPos\n        },\n        stop: { ...offSetData\n        }\n      };\n      this.line = this.line.concat(this.position);\n      this.paint(this.prevPos, offSetData, this.userStrokeStyle);\n    }\n  }\n\n  endPaintEvent() {\n    if (this.isPainting) {\n      this.isPainting = false;\n      this.sendPaintData();\n    }\n  }\n\n  paint(prevPos, currPos, strokeStyle) {\n    const {\n      offsetX,\n      offsetY\n    } = currPos;\n    const {\n      offsetX: x,\n      offsetY: y\n    } = prevPos;\n    this.ctx.beginPath();\n    this.ctx.strokeStyle = strokeStyle;\n    this.ctx.moveTo(x, y);\n    this.ctx.lineTo(offsetX, offsetY);\n    this.ctx.stroke();\n    this.prevPos = {\n      offsetX,\n      offsetY\n    };\n  }\n\n  async sendPaintData() {\n    const body = {\n      line: this.line,\n      userId: this.userId\n    };\n    const req = await fetch(\"http://localhost:4000/paint\", {\n      method: \"post\",\n      body: JSON.stringify(body),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    const res = await req.json();\n    this.line = [];\n  }\n\n  componentDidMount() {\n    this.canvas.width = 800;\n    this.canvas.height = 500;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.ctx.lineJoin = \"round\";\n    this.ctx.lineCap = \"round\";\n    this.ctx.lineWidth = 5;\n    const channel = this.pusher.subscribe(\"painting\");\n    channel.bind(\"draw\", data => {\n      const {\n        userId,\n        line\n      } = data;\n\n      if (userId !== this.userId) {\n        line.forEach(position => {\n          this.paint(position.start, position.stop, this.guestStrokeStyle);\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: ref => this.canvas = ref,\n      style: {\n        background: \"black\"\n      },\n      onMouseDown: this.onMouseDown,\n      onMouseLeave: this.endPaintEvent,\n      onMouseUp: this.endPaintEvent,\n      onMouseMove: this.onMouseMove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["C:/Users/ny/Desktop/guguwagwag/client/src/components/draw/Canvas.js"],"names":["React","Component","v4","Pusher","Canvas","constructor","props","isPainting","userStrokeStyle","guestStrokeStyle","line","userId","prevPos","offsetX","offsetY","onMouseDown","bind","onMouseMove","endPaintEvent","pusher","cluster","nativeEvent","offSetData","position","start","stop","concat","paint","sendPaintData","currPos","strokeStyle","x","y","ctx","beginPath","moveTo","lineTo","stroke","body","req","fetch","method","JSON","stringify","headers","res","json","componentDidMount","canvas","width","height","getContext","lineJoin","lineCap","lineWidth","channel","subscribe","data","forEach","render","ref","background"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport Pusher from \"pusher-js\";\r\nimport '../../css/canvas.css'\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.endPaintEvent = this.endPaintEvent.bind(this);\r\n\r\n    this.pusher = new Pusher(\"PUSHER_KEY\", {\r\n      cluster: \"eu\",\r\n    });\r\n  }\r\n  isPainting = false;\r\n  userStrokeStyle = \"#EE92C2\";\r\n  guestStrokeStyle = \"#F0C987\";\r\n  line = [];\r\n  userId = v4();\r\n  prevPos = { offsetX: 0, offsetY: 0 };\r\n\r\n  onMouseDown({ nativeEvent }) {\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    this.isPainting = true;\r\n    this.prevPos = { offsetX, offsetY };\r\n  }\r\n\r\n  onMouseMove({ nativeEvent }) {\r\n    if (this.isPainting) {\r\n      const { offsetX, offsetY } = nativeEvent;\r\n      const offSetData = { offsetX, offsetY };\r\n      this.position = {\r\n        start: { ...this.prevPos },\r\n        stop: { ...offSetData },\r\n      };\r\n      this.line = this.line.concat(this.position);\r\n      this.paint(this.prevPos, offSetData, this.userStrokeStyle);\r\n    }\r\n  }\r\n\r\n  endPaintEvent() {\r\n    if (this.isPainting) {\r\n      this.isPainting = false;\r\n      this.sendPaintData();\r\n    }\r\n  }\r\n\r\n  paint(prevPos, currPos, strokeStyle) {\r\n    const { offsetX, offsetY } = currPos;\r\n    const { offsetX: x, offsetY: y } = prevPos;\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = strokeStyle;\r\n    this.ctx.moveTo(x, y);\r\n    this.ctx.lineTo(offsetX, offsetY);\r\n    this.ctx.stroke();\r\n    this.prevPos = { offsetX, offsetY };\r\n  }\r\n\r\n  async sendPaintData() {\r\n    const body = {\r\n      line: this.line,\r\n      userId: this.userId,\r\n    };\r\n\r\n    const req = await fetch(\"http://localhost:4000/paint\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    });\r\n    const res = await req.json();\r\n    this.line = [];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.canvas.width = 800;\r\n    this.canvas.height = 500;\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n    this.ctx.lineJoin = \"round\";\r\n    this.ctx.lineCap = \"round\";\r\n    this.ctx.lineWidth = 5;\r\n\r\n    const channel = this.pusher.subscribe(\"painting\");\r\n    channel.bind(\"draw\", (data) => {\r\n      const { userId, line } = data;\r\n      if (userId !== this.userId) {\r\n        line.forEach((position) => {\r\n          this.paint(position.start, position.stop, this.guestStrokeStyle);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        ref={(ref) => (this.canvas = ref)}\r\n        style={{ background: \"black\" }}\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseLeave={this.endPaintEvent}\r\n        onMouseUp={this.endPaintEvent}\r\n        onMouseMove={this.onMouseMove}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n"]},"metadata":{},"sourceType":"module"}